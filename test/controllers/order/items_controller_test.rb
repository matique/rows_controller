# mostly generated by Rails

require "test_helper"

class Order::ItemsControllerTest < ActionController::TestCase
  def setup
    @order_item = order_items(:one)
  end

  test "simple" do
    check :index
    check :new
    check :edit, {id: @order_item.id}
    check :show, {id: @order_item.id}
  end

  test "checking model_..." do
    get :index
    assert_equal Order::Item, @controller.send(:model_class)
    assert_equal "Order::Item", @controller.send(:model_name)
    assert_equal "order_item", @controller.send(:model_symbol)
    assert_equal "order_items", @controller.send(:model_symbol_plural)
  end

  test "get index" do
    get :index
    assert_response :success
    refute_nil assigns(:order_items)
  end

  test "get new" do
    get :new
    assert_response :success
  end

  test "create order_item" do
    assert_difference("Order::Item.count") do
      post :create, params: {order_item: {price: @order_item.price}}
    end

    assert_redirected_to edit_order_item_path(assigns(:order_item))
  end

  test "show order_item" do
    get :show, params: {id: @order_item}
    assert_response :success
  end

  test "get edit" do
    get :edit, params: {id: @order_item}
    assert_response :success
  end

  test "update order_item" do
    put :update, params: {id: @order_item,
                          order_item: {price: @order_item.price}}
    assert_redirected_to edit_order_item_path(assigns(:order_item))
  end

  test "destroy order_item" do
    assert_difference("Order::Item.count", -1) do
      delete :destroy, params: {id: @order_item}
    end

    assert_redirected_to order_items_path
  end

  private

  def check(action, par = nil)
    get(action) if par.nil?
    get(action, params: par) if par
    assert_response :success
    assert_template "rows/#{action}"
    assert_match(/Order/, response.body)
  end
end
